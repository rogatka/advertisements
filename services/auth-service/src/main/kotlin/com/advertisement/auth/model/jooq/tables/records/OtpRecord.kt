/*
 * This file is generated by jOOQ.
 */
package com.advertisement.auth.model.jooq.tables.records


import com.advertisement.auth.model.jooq.tables.Otp

import java.time.Instant
import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class OtpRecord() : UpdatableRecordImpl<OtpRecord>(Otp.OTP) {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var phone: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var otpHash: ByteArray?
        set(value): Unit = set(2, value)
        get(): ByteArray? = get(2) as ByteArray?

    open var type: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var createdAt: Instant?
        set(value): Unit = set(4, value)
        get(): Instant? = get(4) as Instant?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised OtpRecord
     */
    constructor(id: UUID? = null, phone: String? = null, otpHash: ByteArray? = null, type: String? = null, createdAt: Instant? = null): this() {
        this.id = id
        this.phone = phone
        this.otpHash = otpHash
        this.type = type
        this.createdAt = createdAt
        resetChangedOnNotNull()
    }
}
