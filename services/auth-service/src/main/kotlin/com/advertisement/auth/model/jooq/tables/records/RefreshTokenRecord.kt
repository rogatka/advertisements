/*
 * This file is generated by jOOQ.
 */
package com.advertisement.auth.model.jooq.tables.records


import com.advertisement.auth.model.jooq.tables.RefreshToken

import java.time.Instant
import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class RefreshTokenRecord() : UpdatableRecordImpl<RefreshTokenRecord>(RefreshToken.REFRESH_TOKEN) {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var userId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var refreshTokenHash: ByteArray?
        set(value): Unit = set(2, value)
        get(): ByteArray? = get(2) as ByteArray?

    open var revoked: Boolean?
        set(value): Unit = set(3, value)
        get(): Boolean? = get(3) as Boolean?

    open var createdAt: Instant?
        set(value): Unit = set(4, value)
        get(): Instant? = get(4) as Instant?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised RefreshTokenRecord
     */
    constructor(id: UUID? = null, userId: UUID? = null, refreshTokenHash: ByteArray? = null, revoked: Boolean? = null, createdAt: Instant? = null): this() {
        this.id = id
        this.userId = userId
        this.refreshTokenHash = refreshTokenHash
        this.revoked = revoked
        this.createdAt = createdAt
        resetChangedOnNotNull()
    }
}
