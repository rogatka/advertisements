/*
 * This file is generated by jOOQ.
 */
package com.advertisement.auth.model.jooq.keys


import com.advertisement.auth.model.jooq.tables.AppClients
import com.advertisement.auth.model.jooq.tables.Otp
import com.advertisement.auth.model.jooq.tables.RefreshToken
import com.advertisement.auth.model.jooq.tables.Roles
import com.advertisement.auth.model.jooq.tables.Users
import com.advertisement.auth.model.jooq.tables.UsersRoles
import com.advertisement.auth.model.jooq.tables.records.AppClientsRecord
import com.advertisement.auth.model.jooq.tables.records.OtpRecord
import com.advertisement.auth.model.jooq.tables.records.RefreshTokenRecord
import com.advertisement.auth.model.jooq.tables.records.RolesRecord
import com.advertisement.auth.model.jooq.tables.records.UsersRecord
import com.advertisement.auth.model.jooq.tables.records.UsersRolesRecord

import org.jooq.ForeignKey
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val APP_CLIENTS_NAME_KEY: UniqueKey<AppClientsRecord> = Internal.createUniqueKey(AppClients.APP_CLIENTS, DSL.name("app_clients_name_key"), arrayOf(AppClients.APP_CLIENTS.NAME), true)
val APP_CLIENTS_PKEY: UniqueKey<AppClientsRecord> = Internal.createUniqueKey(AppClients.APP_CLIENTS, DSL.name("app_clients_pkey"), arrayOf(AppClients.APP_CLIENTS.ID), true)
val OTP_PKEY: UniqueKey<OtpRecord> = Internal.createUniqueKey(Otp.OTP, DSL.name("otp_pkey"), arrayOf(Otp.OTP.ID), true)
val REFRESH_TOKEN_PKEY: UniqueKey<RefreshTokenRecord> = Internal.createUniqueKey(RefreshToken.REFRESH_TOKEN, DSL.name("refresh_token_pkey"), arrayOf(RefreshToken.REFRESH_TOKEN.ID), true)
val ROLES_PKEY: UniqueKey<RolesRecord> = Internal.createUniqueKey(Roles.ROLES, DSL.name("roles_pkey"), arrayOf(Roles.ROLES.ID), true)
val USERS_PHONE_KEY: UniqueKey<UsersRecord> = Internal.createUniqueKey(Users.USERS, DSL.name("users_phone_key"), arrayOf(Users.USERS.PHONE), true)
val USERS_PKEY: UniqueKey<UsersRecord> = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), arrayOf(Users.USERS.ID), true)
val USERS_ROLES_PKEY: UniqueKey<UsersRolesRecord> = Internal.createUniqueKey(UsersRoles.USERS_ROLES, DSL.name("users_roles_pkey"), arrayOf(UsersRoles.USERS_ROLES.ID), true)

// -------------------------------------------------------------------------
// FOREIGN KEY definitions
// -------------------------------------------------------------------------

val REFRESH_TOKEN__REFRESH_TOKEN_USER_ID_FK: ForeignKey<RefreshTokenRecord, UsersRecord> = Internal.createForeignKey(RefreshToken.REFRESH_TOKEN, DSL.name("refresh_token_user_id_fk"), arrayOf(RefreshToken.REFRESH_TOKEN.USER_ID), com.advertisement.auth.model.jooq.keys.USERS_PKEY, arrayOf(Users.USERS.ID), true)
val USERS_ROLES__ROLE_ID_FK: ForeignKey<UsersRolesRecord, RolesRecord> = Internal.createForeignKey(UsersRoles.USERS_ROLES, DSL.name("role_id_fk"), arrayOf(UsersRoles.USERS_ROLES.ROLE_ID), com.advertisement.auth.model.jooq.keys.ROLES_PKEY, arrayOf(Roles.ROLES.ID), true)
val USERS_ROLES__USER_ID_FK: ForeignKey<UsersRolesRecord, UsersRecord> = Internal.createForeignKey(UsersRoles.USERS_ROLES, DSL.name("user_id_fk"), arrayOf(UsersRoles.USERS_ROLES.USER_ID), com.advertisement.auth.model.jooq.keys.USERS_PKEY, arrayOf(Users.USERS.ID), true)
