server:
  port: 8082
spring:
  application:
    name: payment-service
  r2dbc:
    url: ${POSTGRES_R2DBC_URL:r2dbc:postgresql://localhost:25432/local-docker-db}
    username: postgres
    password: postgres
  liquibase:
    enabled: true
    change-log: db/changelog/db.changelog-master.xml
    default-schema: payment
    liquibase-schema: payment
    url: ${POSTGRES_JDBC_URL:jdbc:postgresql://localhost:25432/local-docker-db}
    user: postgres
    password: postgres
    show-summary-output: all

target: ${TEMPORAL_URL:127.0.0.1:7233}

security:
  internal-auth:
    username: saga-orchestrator
    password: password1234

pay-service:
  base-url: ${PAY_SERVICE_URL:http://localhost:8484}
  pay-path: api/pay
  username: payment-service-user
  password: payment-service-password
  retry:
    max-attempts: 3
    min-backoff-seconds: 2

advertisement-platform-account-id: 3ba6265d-7f08-4faf-868b-1d7b02ff08d4

tracing:
  url: ${TRACING_URL:http://127.0.0.1:4317}
loki:
  url: ${LOKI_URL:http://localhost:3100/loki/api/v1/push}

management:
  metrics.distribution.percentiles-histogram.http.server.requests: true
  endpoints.web.exposure.include: '*' # health,info,prometheus
  tracing:
    enabled: true
    sampling.probability: 1.0

logging:
  pattern.level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
  console: "[${spring.application.name:}] %clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
  level:
    org.springframework: INFO
    org.springframework.security: INFO
    com.advertisement: DEBUG
    io.r2dbc.postgresql.QUERY: DEBUG # for queries
    io.r2dbc.postgresql.PARAM: DEBUG # for parameters