---
services:
  postgres-local:
    container_name: db-local-docker
    image: postgres:latest
    restart: on-failure
    environment:
      POSTGRES_DB: local-docker-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "25432:5432"
    volumes:
      - local-docker-db-data:/var/lib/postgresql/data/
      - ./:/docker-entrypoint-initdb.d/

  mongo:
    image: mongo:8.0.0-rc20
    container_name: local-mongo-docker
    restart: on-failure
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - "mongo1_data:/data/db"
      - "mongo1_config:/data/configdb"

  minio:
    image: minio/minio
    container_name: 'local-minio-docker'
    restart: on-failure
    ports:
      - "9005:9000"
      - "9006:9001"
    command: server /data --console-address :9001
    environment:
      MINIO_ACCESS_KEY: advertisement
      MINIO_SECRET_KEY: advertisement-secret-key
    volumes:
      - "minio_storage:/data"

  auth-service:
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    environment:
      LOKI_URL: http://host.docker.internal:3100/loki/api/v1/push
      POSTGRES_R2DBC_URL: r2dbc:postgresql://host.docker.internal:25432/local-docker-db
      POSTGRES_JDBC_URL: jdbc:postgresql://host.docker.internal:25432/local-docker-db
      SMS_SERVICE_URL: http://host.docker.internal:8484
      TRACING_URL: http://host.docker.internal:4317
    ports:
      - 8081:8081
      - 9081:9081
    links:
      - postgres-local
  ads-service:
    build:
      context: .
      dockerfile: services/ads-service/Dockerfile
    ports:
      - 8085:8085
    environment:
      REDIS_HOST: host.docker.internal
      REDIS_PORT: 16379
      REDIS_PASSWORD: abc
      LOKI_URL: http://host.docker.internal:3100/loki/api/v1/push
      MONGODB_URI: mongodb://host.docker.internal:27017
      MONGODB_DATABASE: advertisement
      KAFKA_BOOTSTRAP_SERVERS: host.docker.internal:29092
      TEMPORAL_TARGET: host.docker.internal:7233
      AUTH_SERVICE_URL: auth-service:9081
      AUTH_SERVICE_USERNAME: ads-client
      AUTH_SERVICE_PASSWORD: 3!FnX23p%2
      SAGA_ORCHESTRATOR_URL: http://saga-orchestrator:8083
      MINIO_URL: http://host.docker.internal:9005
      TRACING_URL: http://host.docker.internal:4317
    links:
      - auth-service
      - mongo
      - minio
  payment-service:
    build:
      context: .
      dockerfile: services/payment-service/Dockerfile
    environment:
      LOKI_URL: http://host.docker.internal:3100/loki/api/v1/push
      POSTGRES_R2DBC_URL: r2dbc:postgresql://host.docker.internal:25432/local-docker-db
      POSTGRES_JDBC_URL: jdbc:postgresql://host.docker.internal:25432/local-docker-db
      TEMPORAL_URL: host.docker.internal:7233
      PAY_SERVICE_URL: http://host.docker.internal:8484
      TRACING_URL: http://host.docker.internal:4317
    ports:
      - 8082:8082
    links:
      - postgres-local
  saga-orchestrator:
    build:
      context: .
      dockerfile: services/saga-orchestrator/Dockerfile
    ports:
      - 8083:8083
    environment:
      LOKI_URL: http://host.docker.internal:3100/loki/api/v1/push
      POSTGRES_R2DBC_URL: r2dbc:postgresql://host.docker.internal:25432/local-docker-db
      TEMPORAL_URL: host.docker.internal:7233
      TRACING_URL: http://host.docker.internal:4317
    links:
      - postgres-local

volumes:
  mongo1_data:
  mongo1_config:
  minio_storage: {}
  local-docker-db-data: